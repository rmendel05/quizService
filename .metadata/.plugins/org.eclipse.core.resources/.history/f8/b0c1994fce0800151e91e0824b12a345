package com.rmendel.quizManager.application;

import java.util.HashMap;
import java.util.SortedSet;
import java.util.TreeSet;

import com.rmendel.framework.ExpressionUtilities;
import com.rmendel.quizManager.api.Answer;
import com.rmendel.quizManager.api.Question;

public class KeyWordIndex {

	public KeyWordIndex() {
		// TODO Auto-generated constructor stub
	}

	private void updateKeyWordIndex(Question toAdd) {
		putAllKeyWordReferences(toAdd.getQuestionText(), toAdd);
		if(toAdd.getAnswer() != null)
			putAllKeyWordReferences(toAdd.getAnswer().getResponseText(), toAdd);
		for(Answer distractor:toAdd.getDistractors())
			putAllKeyWordReferences(distractor.getResponseText(), toAdd);
	}
	
	private void putAllKeyWordReferences(
			String phrase,
			Question question) {
		for(String word:phrase.split(" "))
			putKeyWordReference(word, question);
	}
	
	private void putKeyWordReference(
			String rawWord,
			Question question) {
		String word = rawWord.trim().toLowerCase();
		if(ExpressionUtilities.isTrivial(word))
			return;
		
		SortedSet<Question> questionSet;
		if(rowsByKeyWord.containsKey(word)) {
			questionSet = rowsByKeyWord.get(word);
		} else {
			questionSet = new TreeSet<Question>();
			rowsByKeyWord.put(word, questionSet);
		}
		questionSet.add(question);
	}

	private HashMap<String, SortedSet<Question>> rowsByKeyWord =
			new HashMap<String, SortedSet<Question>>();
}
